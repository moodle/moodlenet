query ProfilePageUserData($profileId: ID!, $myProfileId: [ID!]) {
  node(id: $profileId) {
    ... on Profile {
      id
      name
      avatar
      description
      image
      firstName
      lastName
      siteUrl
      location
      _published

      followersCount: _relCount(type: Follows, inverse: true)
      myFollow: _rel(
        type: Follows
        inverse: true
        page: { first: 1 }
        targetIds: $myProfileId
      ) {
        edges {
          edge {
            id
          }
        }
      }
      collectionsCount: _relCount(type: Created, targetTypes: [Collection])
      collections: _rel(
        type: Created
        targetTypes: [Collection]
        page: { first: 100 }
      ) {
        edges {
          node {
            ... on Collection {
              id
              name
              image
              likesCount: _relCount(type: Likes, inverse: true)
            }
          }
        }
      }

      resourcesCount: _relCount(type: Created, targetTypes: [Resource])
      resources: _rel(
        type: Created
        targetTypes: [Resource]
        page: { first: 100 }
      ) {
        edges {
          node {
            ... on Resource {
              id
              name
              image
              likesCount: _relCount(type: Likes, inverse: true)
            }
          }
        }
      }
    }
  }
}

mutation editProfile($id: ID!, $profileInput: EditProfileInput!) {
  editNode(input: { id: $id, nodeType: Profile, Profile: $profileInput }) {
    ... on EditNodeMutationError {
      type
      details
    }
    ... on EditNodeMutationSuccess {
      node {
        ... on Profile {
          id
          name
          avatar
          description
          image
          firstName
          lastName
          siteUrl
          location
          _published
        }
      }
    }
  }
}

mutation delProfileRelation($edge: DeleteEdgeInput!) {
  deleteEdge(input: $edge) {
    ... on DeleteEdgeMutationError {
      type
      details
    }
  }
}

mutation addProfileRelation($edge: CreateEdgeInput!) {
  createEdge(input: $edge) {
    ... on CreateEdgeMutationError {
      type
      details
    }
  }
}

mutation sendEmailToProfile($toProfileId: ID!, $text: String!) {
  sendEmailToProfile(text: $text, toProfileId: $toProfileId)
}
