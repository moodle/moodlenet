query collectionPageData($collectionId: ID!, $myProfileId: [ID!]) {
  node(id: $collectionId) {
    ... on Collection {
      id
      name
      description
      _published
      image

      followersCount: _relCount(type: Follows, inverse: true)
      myFollow: _rel(
        type: Follows
        inverse: true
        page: { first: 1 }
        targetIds: $myProfileId
      ) {
        edges {
          edge {
            id
          }
        }
      }

      myBookmarked: _rel(
        type: Bookmarked
        inverse: true
        page: { first: 1 }
        targetIds: $myProfileId
      ) {
        edges {
          edge {
            id
          }
        }
      }
      resources: _rel(type: Features, targetTypes: [Resource]) {
        edges {
          edge {
            id
          }
          node {
            ... on Resource {
              id
              name
              image
            }
          }
        }
      }

      creator: _rel(type: Created, inverse: true, page: { first: 1 }) {
        edges {
          edge {
            _created
          }
          node {
            id
            name
            ... on Profile {
              avatar
            }
            ... on Organization {
              smallLogo
            }
          }
        }
      }
    }
  }
}

mutation editCollection($id: ID!, $collInput: EditCollectionInput!) {
  editNode(input: { id: $id, nodeType: Collection, Collection: $collInput }) {
    ... on EditNodeMutationError {
      type
      details
    }
    ... on EditNodeMutationSuccess {
      node {
        ... on Collection {
          id
          name
          description
          _published
          image
        }
      }
    }
  }
}

mutation delCollection($node: DeleteNodeInput!) {
  deleteNode(input: $node) {
    ... on DeleteNodeMutationError {
      type
      details
    }
  }
}

mutation delCollectionRelation($edge: DeleteEdgeInput!) {
  deleteEdge(input: $edge) {
    ... on DeleteEdgeMutationError {
      type
      details
    }
  }
}

mutation addCollectionRelation($edge: CreateEdgeInput!) {
  createEdge(input: $edge) {
    ... on CreateEdgeMutationError {
      type
      details
    }
  }
}
