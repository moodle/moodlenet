type Resource implements INode {
  name: String!
  description: String!
  thumbnail: AssetRef
  content: AssetRef!
  contentType: ContentType!
  # INode
  id: ID!
  slug: String!
  _organization: Organization!
  _created: GlyphByAt!
  _lastEdited: GlyphByAt
  _rel(edge: EdgeTypeInput!, page: PaginationInput): RelPage!
  _relCount(type: EdgeType!, target: NodeType!, inverse: Boolean): Int!
}

enum ContentType {
  Upload
  Link
}

# integrations
union Node = Resource
enum NodeType {
  Resource
}

input CreateResourceInput {
  name: String!
  description: String!
  thumbnail: AssetRefInput
  content: AssetRefInput!
  slug: String!
}
input CreateNodeInput {
  Resource: CreateResourceInput
}

input EditResourceInput {
  name: String!
  description: String!
  thumbnail: AssetRefInput
  content: AssetRefInput!
  slug: String!
}
input EditNodeInput {
  Resource: EditResourceInput
}
