type Domain implements INode & IContentNode {
  name: String!
  summary: String!
  icon: AssetRef
  id: ID!
  _domain: Domain
  _created: GlyphByAt!
  _lastEdited: GlyphByAt
  _rel(edge: EdgeTypeInput!, page: PaginationInput): RelPage!
  _relCount(type: EdgeType!, target: NodeType!, inverse: Boolean): Int!
}

input CreateDomainInput {
  content: ContentNodeInput!
}

input UpdateDomainInput {
  content: ContentNodeInput!
}

# integrations
union Node = Domain
enum NodeType {
  Domain
}
input CreateNodeInput {
  Domain: CreateDomainInput
}
input UpdateNodeInput {
  Domain: UpdateDomainInput
}
