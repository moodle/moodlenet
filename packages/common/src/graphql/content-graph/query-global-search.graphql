type Query {
  globalSearch(text: String!, nodeTypes: [NodeType!], sort: GlobalSearchSort, page: PaginationInput): SearchPage!
}

type SearchPage implements Page {
  pageInfo: PageInfo!
  edges: [SearchPageEdge!]!
}

type SearchPageEdge implements PageEdge {
  cursor: Cursor!
  node: INode!
}

input GlobalSearchSort {
  by: GlobalSearchSortBy!
  asc: Boolean
}

enum GlobalSearchSortBy {
  Relevance
  Popularity
  Recent
}
