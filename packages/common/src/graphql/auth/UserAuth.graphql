type Mutation {
  signUp(email: String!, name: String!, password: String!): SimpleResponse!
  createSession(email: String!, password: String!, activationEmailToken: String): CreateSession!
  changeRecoverPassword(newPassword: String!, token: String!): CreateSession
  recoverPassword(email: String!): SimpleResponse!
  #later..
  # changePassword(newPassword: String!, currentPassword: String!): SimpleResponse!
  # changeEmailRequest(newEmail: String!): SimpleResponse!
  # changeEmailConfirm(changeEmailToken: String!, password: String!): Boolean!
  # sessionByEmail(email: String!): SimpleResponse!
}

type Query {
  getSession: UserSession
}

type SimpleResponse {
  success: Boolean!
  message: String
}

type CreateSession {
  jwt: String
  message: String
}

type UserSession {
  email: String!
  profile: INode!
}
